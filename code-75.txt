Given a positive integer N, your task is to alternately add and subtract digits from right to left, and repeat the process until you get a single-digit number.

Start from the rightmost digit:

Add the first digit (rightmost),

Subtract the second digit,

Add the third,

Subtract the fourth,

and so on...

Repeat this process on the result (if it's more than one digit), until a single-digit number is obtained.

Input Format

A single line containing a positive integer N

Constraints

1 ≤ N ≤ 10⁹

Output Format

Print the final single-digit result after applying alternate digit sum logic recursively.

Sample Input 0

1234
Sample Output 0

2
Explanation 0

From right to left: +4 -3 +2 -1 = 2 → Already a single digit → Output: 2

Sample Input 1

987654
Sample Output 1

3
Explanation 1

From right to left: +4 -5 +6 -7 +8 -9 = -3 Absolute value: 3 → Already a single digit → Output: 3

Sample Input 2

1001
Sample Output 2

0
Explanation 2

From right to left: +1 -0 +0 -1 = 0 → Output: 0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;

public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        while (Math.abs(n) >= 10) {
            int sum = 0;
            boolean add = true;

            while (n > 0) {
                int digit = n % 10;
                sum += add ? digit : -digit;
                add = !add;
                n /= 10;
            }

            n = Math.abs(sum);
        }

        System.out.println(n);
    }
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
